openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'CODEMEN - ECART'
  description: |
    'This is a multivendor ecommerce website.Where we have implemented different types of industry standard procedure.'
     
     ![logo](https://i.ibb.co/1vPZdhm/logo.jpg)
  contact:
    name: CODEMEN
    url: https://codemen@@@.com
    email: support@codemen.com
servers:
  - description: Dev
    url: 'http://localhost:8000/api/v1'

  - description: Test
    url: 'http://testing.com/api/v1'

  - description: Prod
    url: 'http://production.com/api/v1'
tags:
  - name: Auth
    description: Authentication Endpoints **(public)=====>>>>>(anyone)** (complete)
  - name: Account
    description: Account Endpoints **(private + admin)=====>>>>>(admin + customer + seller)**
  - name: Profile
    description: Profile Endpoints **(private)=====>>>>>(admin + customer + seller)**
  - name: Category
    description: Wishlist Endpoints **(private)=====>>>>>(admin)**
  - name: Product
    description: Products Endpoints  **(public + private)=====>>>>>(anyone)**
  - name: Cart
    description: Cart Endpoints **(private)=====>>>>>(customer)**
  - name: Order
    description: Order Endpoints **(private)=====>>>>>(customer + admin + vendor)**
  - name: Wishlist
    description: Wishlist Endpoints **(private)=====>>>>>(customer + admin + vendor)**
  - name: Review 
    description: Review Endpoints **(private)=====>>>>>(customer + admin)**
  - name: Transaction 
    description: Transaction Endpoints **(private)=====>>>>>(customer + admin)**
  - name: Dashboard
    description: Dashboard Endpoints **(private)=====>>>>>(customer + admin + vendor)**


paths:
  '/auth/register':
    post:
      description: (customer + vendor) Create A New Account
      tags: [Auth]
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe001
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
                password:
                  type: string
                  format: password
                  example: PassWord123
                role:
                  type: string
                  enum: [customer, vendor]
                  example: customer
              required: [username, email, password,role]
      responses:
        '201':
          description: User Signup Successful 
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 201
                  message:
                    type: string
                    example: User Signup Successful
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                        example: johndoe001
                      first_name:
                        type: string
                        example: John
                      last_name:
                        type: string
                        example: Doe
                      email:
                        type: string
                        format: email
                        example: johndoe@example.com
                      role:
                        type: string
                        enum: [customer, vendor]
                        example: customer
                      verificationStatus:
                        type: boolean
                        example: false 
                      profileCompletionStatus:
                        type: boolean
                        example: false
                    required: [username, email, password,role]
                  token:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
                      refresh_token:
                        type: string
                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/auth/signup'
                      signin:
                        type: string
                        example: '/auth/signin'
        '400':
          $ref: '#/components/responses/400'
        '500':
          '$ref': '#/components/responses/500'
  '/auth/login':
    post:
      description: (customer + vendor) Login to your account
      tags: [Auth]
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
                password:
                  type: string
                  format: password
                  example: PassWord@123
              required: [email, password]
      responses:
        '200':
          description: User Signin Successful
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 200
                  message:
                    type: string
                    example: Signin successful
                  data:
                     type: object
                     properties:
                       username:
                         type: string
                         example: johndoe001
                       first_name:
                         type: string
                         example: John
                       last_name:
                         type: string
                         example: Doe
                       email:
                         type: string
                         format: email
                         example: johndoe@example.com
                       role:
                         type: string
                         enum: [customer, vendor]
                         example: customer
                       verificationStatus:
                         type: boolean
                         example: false 
                       profileCompletionStatus:
                         type: boolean
                         example: false
                     required: [username, email, password,role]
                  token:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
                      refresh_token:
                        type: string
                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/auth/signin'
                      update_profile:
                        type: string
                        example: '/profile/customer'
        '400':
          $ref: '#/components/responses/400'
        '500':
          '$ref': '#/components/responses/500'
  '/accounts':
    get:
      tags: [Account]
      description: Get All Accounts
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of products
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            username:
                              type: string
                              example: johndoe001
                            first_name:
                              type: string
                              example: John
                            last_name:
                              type: string
                              example: Doe
                            email:
                              type: string
                              format: email
                              example: johndoe@example.com
                            role:
                              type: string
                              enum: [customer, vendor]
                              example: customer
                            verificationStatus:
                              type: boolean
                              example: false 
                            profileCompletionStatus:
                              type: boolean
                              example: false
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/accounts?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/accounts?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: 'accounts?page=1&limit=10'
        '500':
          '$ref': '#/components/responses/500'
  '/accounts/{id}':
    get:
      tags: [Account]
      description: Fetch A Single User Account
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single User View'
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      username:
                        type: string
                        example: johndoe001
                      first_name:
                        type: string
                        example: John
                      last_name:
                        type: string
                        example: Doe
                      email:
                        type: string
                        format: email
                        example: johndoe@example.com
                      role:
                        type: string
                        enum: [customer, vendor]
                        example: customer
                      verificationStatus:
                        type: boolean
                        example: false 
                      profileCompletionStatus:
                        type: boolean
                        example: false
                  - $ref: '#/components/schemas/Timestamp'
                    links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: []
      tags: [Account]
      description: Update Entire Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - bearerAuth: []
      tags: [Account]
      description: Update Product Details Partially
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [Account]
      description: Delete A User Account By Id
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'User Account Deleted Successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/profiles/customer':
    get:
      tags: [Profile]
      description: Get Many Products 
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of products
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                              title:
                                type: string
                                example: Full Seleve Shirt
                              category:
                                type: number
                                example: 02
                              thumbnail:
                                type: string
                                format: url
                                example: https://s3.aws.example.com/23nds
                              summary:
                                type: string
                                format: text
                                example: Summary of the products
                              description:
                                type: string
                                format: text
                                example: Description of the               products
                              price:
                                type: number
                                example: 350.07
                              quantity:
                                type: number
                                example: 200
                              discount_price:
                                type: number
                                example: 350.07
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/products?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/products?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: 'products?page=1&limit=10'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createPost
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Add A New Product
      requestBody:
        description: To add a new product vendor must need to provide valid data
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title, category, thumbnail, summary,description,price,quantity, discount_price]
      responses:
        '201':
          description: Successfully add a new product.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/profiles/customer/{id}':
    get:
      tags: [Profile]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Product View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Product'
                      - type: object
                        properties:
                          seller:
                            $ref: '#/components/schemas/SellerDTO'
                      - type: object
                        properties:
                          queries:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProductQuery'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Update Entire Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Update Product Details Partially
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Delete A Customer Profile
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: ' Customer Profile Deleted Successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/profiles/vendor':
    get:
      tags: [Profile]
      description: Get Many Products 
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of products
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                              title:
                                type: string
                                example: Full Seleve Shirt
                              category:
                                type: number
                                example: 02
                              thumbnail:
                                type: string
                                format: url
                                example: https://s3.aws.example.com/23nds
                              summary:
                                type: string
                                format: text
                                example: Summary of the products
                              description:
                                type: string
                                format: text
                                example: Description of the               products
                              price:
                                type: number
                                example: 350.07
                              quantity:
                                type: number
                                example: 200
                              discount_price:
                                type: number
                                example: 350.07
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/products?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/products?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: 'products?page=1&limit=10'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createPost
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Add A New Product
      requestBody:
        description: To add a new product vendor must need to provide valid data
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title, category, thumbnail, summary,description,price,quantity, discount_price]
      responses:
        '201':
          description: Successfully add a new product.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/profiles/vendor/{id}':
    get:
      tags: [Profile]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Product View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Product'
                      - type: object
                        properties:
                          seller:
                            $ref: '#/components/schemas/SellerDTO'
                      - type: object
                        properties:
                          queries:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProductQuery'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Update Entire Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Update Product Details Partially
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [Profile]
      description: Delete A Vendor Profile
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'Vendor Profile Deleted Successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/categories':
    get:
      tags: [Category]
      description: Get All Category
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return List Of All Category
          content:
            'application/json':
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                              parent_category:
                                type: string
                                example: Full Seleve Shirt
                              sub_category:
                                type: number
                                example: 02
                              slug:
                                type: string
                                format: url
                                example: shirt-54-455-2344
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/categories/2'
                      next:
                        type: string
                        format: url
                        example: '/categories/{categoryId}'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createCategory
      security:
        - bearerAuth: []
      tags: [Category]
      description: Add A New Category
      requestBody:
        description: To Add A New Category
        content:
          'application/json':
            schema:
              type: object
              properties:
                parent_category:
                  type: string
                  example: Full Seleve Shirt
                sub_category:
                  type: number
                  example: 02
                slug:
                  type: string
                  format: url
                  example: shirt-54-455-2344
      responses:
        '201':
          description: Successfully add a new category
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CategoryCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/categories/{id}':
    get:
      tags: [Category]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Category View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                   allOf:
                    - type: object
                      properties: 
                        id: 
                          type: number 
                          example: 12344  
                    - $ref: '#/components/schemas/Category'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: []
      tags: [Category]
      description: Update Entire Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - bearerAuth: []
      tags: [Category]
      description: Update Product Details Partially
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [Category]
      description: Delete A Category
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'Category Deleted Successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/products':
    get:
      tags: [Product]
      description: Get Many Products 
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of products
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                              title:
                                type: string
                                example: Full Seleve Shirt
                              category:
                                type: number
                                example: 02
                              thumbnail:
                                type: string
                                format: url
                                example: https://s3.aws.example.com/23nds
                              summary:
                                type: string
                                format: text
                                example: Summary of the products
                              description:
                                type: string
                                format: text
                                example: Description of the               products
                              price:
                                type: number
                                example: 350.07
                              quantity:
                                type: number
                                example: 200
                              discount_price:
                                type: number
                                example: 350.07
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/products?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/products?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: 'products?page=1&limit=10'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createPost
      security:
        - bearerAuth: []
      tags: [Product]
      description: Add A New Product
      requestBody:
        description: To add a new product vendor must need to provide valid data
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title, category, thumbnail, summary,description,price,quantity, discount_price]
      responses:
        '201':
          description: Successfully add a new product.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/products/{id}':
    get:
      tags: [Product]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Product View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Product'
                      - type: object
                        properties:
                          seller:
                            $ref: '#/components/schemas/SellerDTO'
                      - type: object
                        properties:
                          queries:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProductQuery'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: []
      tags: [Product]
      description: Update Entire Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - bearerAuth: []
      tags: [Product]
      description: Update Product Details Partially
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [Product]
      description: Delete A Product By Id
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'Product Deleted Successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/carts':
    get:
      operationId: getCart
      security:
        - bearerAuth: []
      tags: [Cart]
      description: Retrive all published articles
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of articles
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              format: int32
                              example: 1
                            title:
                              type: string
                              example: first article
                            cover:
                              type: string
                              format: url
                              example: https://s3.aws.com/myfirstblog/124.jpg
                            
                            link:
                              type: string
                              format: url
                              example: '/articles/1'
                          required: [id, title, author]
                        - $ref: '#/components/schemas/Timestamp'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/articles?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/articles?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: '/articles?page=1&limit=10'
        '400':
          $ref: '#/components/responses/400'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createPost
      security:
        - bearerAuth: []
      tags: [Cart]
      description: Add A New Product
      requestBody:
        description: To add a new product vendor must need to provide valid data
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title, category, thumbnail, summary,description,price,quantity, discount_price]
      responses:
        '201':
          description: Successfully add a new article.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ArticleCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/carts/{id}':
    patch:
      security:
        - bearerAuth: []
      tags: [Cart]
      description: Partially update an article
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: article title
                body:
                  type: string
                  format: text
                  example: article body
                cover:
                  type: string
                  format: url
                  example: 'https://s3.aws.myblog.com/221ddw34'
                status:
                  type: string
                  enum: [draft, published]
                  example: draft
      responses:
        '200':
          description: 'Successfully Updated'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ArticleUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [Cart]
      description: Delete A Product From Cart
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'Product deleted successfully from cart'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/orders':
    get:
      operationId: getOrders
      security:
        - bearerAuth: []
      tags: [Order]
      description: Retrive all published articles
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of articles
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              format: int32
                              example: 1
                            title:
                              type: string
                              example: first article
                            cover:
                              type: string
                              format: url
                              example: https://s3.aws.com/myfirstblog/124.jpg
                            
                            link:
                              type: string
                              format: url
                              example: '/articles/1'
                          required: [id, title, author]
                        - $ref: '#/components/schemas/Timestamp'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/articles?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/articles?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: '/articles?page=1&limit=10'
        '400':
          $ref: '#/components/responses/400'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createPost
      security:
        - bearerAuth: []
      tags: [Order]
      description: Add A New Product
      requestBody:
        description: To add a new product vendor must need to provide valid data
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title, category, thumbnail, summary,description,price,quantity, discount_price]
      responses:
        '201':
          description: Successfully add a new article.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ArticleCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/orders/{id}':
    get:
      operationId: getSpecificOrder
      security:
        - bearerAuth: []
      tags: [Order]
      description: Retrive all published articles
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of articles
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              format: int32
                              example: 1
                            title:
                              type: string
                              example: first article
                            cover:
                              type: string
                              format: url
                              example: https://s3.aws.com/myfirstblog/124.jpg
                           
                            link:
                              type: string
                              format: url
                              example: '/articles/1'
                          required: [id, title, author]
                        - $ref: '#/components/schemas/Timestamp'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/articles?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/articles?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: '/articles?page=1&limit=10'
        '400':
          $ref: '#/components/responses/400'
        '500':
          '$ref': '#/components/responses/500'   
    patch:
      security:
        - bearerAuth: []
      tags: [Order]
      description: Partially update an article
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: article title
                body:
                  type: string
                  format: text
                  example: article body
                cover:
                  type: string
                  format: url
                  example: 'https://s3.aws.myblog.com/221ddw34'
                status:
                  type: string
                  enum: [draft, published]
                  example: draft
      responses:
        '200':
          description: 'Successfully Updated'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ArticleUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/wishlists':
    get:
      operationId: getWishList
      security:
        - bearerAuth: []
      tags: [Wishlist]
      description: Fetch All Wishlists Product
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of wishlists product
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/wishlists?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/wishlists?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: '/wishlists?page=1&limit=10'
                      productDetails:
                        type: string
                        format: url
                        example: '/products/2'
        '400':
          $ref: '#/components/responses/400'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: addProduct
      security:
        - bearerAuth: []
      tags: [Wishlist]
      description: Add A New Product To Wishlist
      requestBody:
        description: To add a new product to wishlist provide correct info
        content:
          'application/json':
            schema:
              type: object
              properties:
                productId:
                  type: number
                  example: 45
                customerId:
                  type: number
                  example: 02

              required: [productId,customerId]
      responses:
        '201':
          description: Successfully add a new product to wishlists.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WishlistAddDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/wishlists/{id}':
    delete:
      security:
        - bearerAuth: []
      tags: [Wishlist]
      description: Delete a product from wishlist by id
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'Product deleted from wishlist successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/reviews':
    get:
      tags: [Review]
      description: Get Many Products 
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of products
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                              title:
                                type: string
                                example: Full Seleve Shirt
                              category:
                                type: number
                                example: 02
                              thumbnail:
                                type: string
                                format: url
                                example: https://s3.aws.example.com/23nds
                              summary:
                                type: string
                                format: text
                                example: Summary of the products
                              description:
                                type: string
                                format: text
                                example: Description of the               products
                              price:
                                type: number
                                example: 350.07
                              quantity:
                                type: number
                                example: 200
                              discount_price:
                                type: number
                                example: 350.07
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/products?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/products?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: 'products?page=1&limit=10'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createReview
      security:
        - bearerAuth: []
      tags: [Review]
      description: |
        Add A Review Of A Product

        Endpoint Access Role- **(Customer)**
      requestBody:
        description: To add a new review user must provide the rating and review
        content:
          'application/json':
            schema:
              type: object
              properties:
                customerId:
                  type:  number
                  example: 102393
                productId:
                  type: number
                  example: 402443
                orderId:
                  type: number
                  example: 402443
                rating:
                  type: number
                  example: 4.0
                comment:
                  type: string
                  format: text
                  example: The product is amazing. This seller provided me best service
                createdAt:
                  type: string
                  format: date-time    
              required: [customerId,productId,orderId, rating,comment, createdAt]
      responses:
        '201':
          description: Successfully Reviewed A Product.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ReviewCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/reviews/{id}':
    get:
      tags: [Review]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Product View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Product'
                      - type: object
                        properties:
                          seller:
                            $ref: '#/components/schemas/SellerDTO'
                      - type: object
                        properties:
                          queries:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProductQuery'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: []
      tags: [Review]
      description: Update Entire Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - bearerAuth: []
      tags: [Review]
      description: Update Product Details Partially
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    delete:
      security:
        - bearerAuth: []
      tags: [Review]
      description: |
        Delete Review Successfully 
        
        Endpoint Access Role- **(Admin)**
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '204':
          description: 'Review Deleted Successfully'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/transactions':
    get:
      tags: [Transaction]
      description: Get Many Products 
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of products
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                              title:
                                type: string
                                example: Full Seleve Shirt
                              category:
                                type: number
                                example: 02
                              thumbnail:
                                type: string
                                format: url
                                example: https://s3.aws.example.com/23nds
                              summary:
                                type: string
                                format: text
                                example: Summary of the products
                              description:
                                type: string
                                format: text
                                example: Description of the               products
                              price:
                                type: number
                                example: 350.07
                              quantity:
                                type: number
                                example: 200
                              discount_price:
                                type: number
                                example: 350.07
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/products?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/products?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: 'products?page=1&limit=10'
        '500':
          '$ref': '#/components/responses/500'
    post:
      operationId: createTransaction
      security:
        - bearerAuth: []
      tags: [Transaction]
      description: Add A New Product
      requestBody:
        description: To add a new product vendor must need to provide valid data
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Transaction'

      responses:
        '201':
          description: Transaction Of A User Created Successfully.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TransactionCreateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/transactions/{id}':
    get:
      tags: [Transaction]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Product View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Product'
                      - type: object
                        properties:
                          seller:
                            $ref: '#/components/schemas/SellerDTO'
                      - type: object
                        properties:
                          queries:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProductQuery'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: []
      tags: [Transaction]
      description: Update Entire Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      security:
        - bearerAuth: []
      tags: [Transaction]
      description: Update Product Details Partially
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Full Seleve Shirt
                category:
                  type: number
                  example: 02
                thumbnail:
                  type: string
                  format: url
                  example: https://s3.aws.example.com/23nds
                summary:
                  type: string
                  format: text
                  example: Summary of the products
                description:
                  type: string
                  format: text
                  example: Description of the products
                price:
                  type: number
                  example: 350.07
                quantity:
                  type: number
                  example: 200
                discount_price:
                  type: number
                  example: 350.07
                
              required: [title,]
              
      responses:
        '200':
          description: 'Successfully Updated The Product'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductUpdateDTO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  '/dashboard/admin':
    get:
      tags: [Dashboard]
      description: Get Many Products 
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortTypeParam'
        - $ref: '#/components/parameters/sortByParam'
        - $ref: '#/components/parameters/searchParam'
      responses:
        '200':
          description: Return a list of products
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                              title:
                                type: string
                                example: Full Seleve Shirt
                              category:
                                type: number
                                example: 02
                              thumbnail:
                                type: string
                                format: url
                                example: https://s3.aws.example.com/23nds
                              summary:
                                type: string
                                format: text
                                example: Summary of the products
                              description:
                                type: string
                                format: text
                                example: Description of the               products
                              price:
                                type: number
                                example: 350.07
                              quantity:
                                type: number
                                example: 200
                              discount_price:
                                type: number
                                example: 350.07
                        - $ref: '#/components/schemas/Timestamp'  
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: '/products?page=2&limit=10'
                      next:
                        type: string
                        format: url
                        example: '/products?page=3&limit=10'
                      prev:
                        type: string
                        format: url
                        example: 'products?page=1&limit=10'
        '500':
          '$ref': '#/components/responses/500'
  '/dashboard/vendor':
    get:
      tags: [Dashboard]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Product View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Product'
                      - type: object
                        properties:
                          seller:
                            $ref: '#/components/schemas/SellerDTO'
                      - type: object
                        properties:
                          queries:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProductQuery'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/dashboard/customer':
    get:
      tags: [Dashboard]
      description: Fetch A Single Product
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - in: query
          name: expand
          description: expand vendor and  query object
          schema:
            type: string
            example: 'vendor, query'
      responses:
        '200':
          description: 'Single Product View'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Product'
                      - type: object
                        properties:
                          seller:
                            $ref: '#/components/schemas/SellerDTO'
                      - type: object
                        properties:
                          queries:
                            type: array
                            items:
                              $ref: '#/components/schemas/ProductQuery'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/products/1'
                      seller:
                        type: string
                        example: '/seller/1'
                      
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Category:
      allOf:
       - type: object
         properties:
           parent_category:
              type: string
              example: shirt 
           sub_category:
              type: number
              example: 02
           slug:
              type: string
              format: url
              example: shirt-54-455-2344
       - $ref: '#/components/schemas/Timestamp'
      required: [title, category, thumbnail, summary,description,price,quantity, discount_price]
    CategoryCreateDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: 'Category add successfully'
        data:
          allOf:
           - type: object
             properties:
              id:
                type: number
                example: 2323454
           - $ref: '#/components/schemas/Category'
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: '/categories'
            
    Product:
      allOf:
       - type: object
         properties:
          title:
            type: string
            example: Full Seleve Shirt
          category:
            type: number
            example: 02
          thumbnail:
            type: string
            format: url
            example: https://s3.aws.example.com/23nds
          summary:
            type: string
            format: text
            example: Summary of the products
          description:
            type: string
            format: text
            example: Description of the products
          price:
            type: number
            example: 350.07
          quantity:
            type: number
            example: 200
          discount_price:
            type: number
            example: 350.07   
       - $ref: '#/components/schemas/Timestamp'
      required: [title, category, thumbnail, summary,description,price,quantity, discount_price]
    ProductCreateDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: 'Product add successfully'
        data:
          $ref: '#/components/schemas/Product'
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: '/products/1'
            seller:
              type: string
              format: url
              example: '/users/seller/1'
    ProductUpdateDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: 'Product Update successfully'
        data:
          $ref: '#/components/schemas/Product'
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: '/products/1'
            seller:
              type: string
              format: url
              example: '/users/seller/1'
    ProductQuery:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: int32
              example: 1
            customerId:
              type: integer
              format: int32
              example: 1
            productId:
              type: integer
              format: int32
              example: 1
            query:
              type: string
              format: text
              example: What is the shelf life?
            answer:
              type: string
              format: text
              example: 6 months
            
          required: [id, authorId, articleId, body, status]
        - $ref: '#/components/schemas/Timestamp'
    Review:
       type: object
       properties:
         customerId:
           type:  number
           example: 102393
         productId:
           type: number
           example: 402443
         orderId:
           type: number
           example: 402443
         rating:
           type: number
           example: 4.0
         comment:
           type: string
           format: text
           example: The product is amazing. This seller provided me best service
         createdAt:
           type: string
           format: date-time    
       required: [customerId,productId,orderId, rating,comment, createdAt]
    ReviewCreateDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: 'Review add successfully'
        data:
          $ref: '#/components/schemas/Review'
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: '/products/1'
            seller:
              type: string
              format: url
              example: '/users/seller/1'
    WishlistAddDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: 'Product add to wishlist successfully.'
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: '/wishlist'  
    Timestamp:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [createdAt, updatedAt]
    SellerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: 'John Doe'
      required: [id, name]
    Pagination:
      type: object
      properties:
        page:
          type: integer
          format: int32
          example: 2
        limit:
          type: integer
          format: int32
          example: 10
        next:
          type: integer
          format: int32
          example: 3
        prev:
          type: integer
          format: int32
          example: 1
        totalPage:
          type: integer
          format: int32
          example: 5
        totalItems:
          type: integer
          format: int32
          example: 50
      required:
        - page
        - limit
        - totalPage
        - totalItems
    Token:
      type: object
      properties:
        access_token:
          type: string
          example: 'eyJhbGciOiJIUzI1NiCI6IkeyJzdWIiOiIxMjM0NTYwibmFtZSI6IkpvaG4gRaWF0IjoxNTE2MjM5SflKxwRJSMeKKF2QT4f6POk6yJV_adQssw5c'
        refresh_token:
          type: string
          example: 'eyJhbGciOiJIUzI1NiCI6IkeyJzdWIiOiIxMjM0NTYwibmFtZSI6IkpvaG4gRaWF0IjoxNTE2MjM5SflKxwRJSMeKKF2QT4f6POk6yJV_adQssw5c'     
    Transaction:
      type: object
      properties:
        userId:
          type: number
          example: 232445
        productId:
          type: number
          example: 2345234
        shipping_method:
          type: string
          example: N/A
        amount:
          type: number
          example: 405.34
        transaction_type:
          type: string
          enum: [cod,online]
          example: cod
        transaction_status:
          type: string
          enum: [paid, due]
          example: paid
        created_at:
          type: string
          format: date-time
      required: [userId, productId, shipping_method, amount, transaction_type, transaction_status, created_at]
    TransactionCreateDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 201
        message:
          type: string
          example: 'Transaction Recorded successfully'
        data:
          allOf:
            - type: object
              properties:
                id:
                  type: integer
                  example: 20034
            - $ref: '#/components/schemas/Transaction'
        links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: '/transactions'
            
    

         
  responses:
    '500':
      description: 'Internal Server Error'
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 500
              error:
                type: string
                example: Internal Server Error
              message:
                type: string
                example: We are sorry for the inconvenience. Please try again later
    '400':
      description: 'Bad Request'
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 400
              error:
                type: string
                example: Bad Request
              data:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: email
                    message:
                      type: string
                      example: Invalid email
                    in:
                      type: string
                      enum: [query, body]
                      example: body
    '401':
      description: Unauthorized
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 401
              error:
                type: string
                example: Unauthorized
              message:
                type: string
                example: You don't have the right permissions
    '404':
      description: Resource Not Found
      content:
        'application/json':
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 404
              error:
                type: string
                example: Not Found
              message:
                type: string
                example: Requested resource not found
  parameters:
    pageParam:
      in: query
      name: page
      description: current page number
      required: true
      schema:
        type: integer
        format: int32
        example: 2
    limitParam:
      in: query
      name: limit
      description: maximum items to be returned
      required: true
      schema:
        type: integer
        format: int32
        example: 10
    sortTypeParam:
      in: query
      name: sort_type
      description: type of sort (asc or dsc)
      schema:
        type: string
        enum: [asc, dsc]
        example: dsc
    sortByParam:
      in: query
      name: sort_by
      description: Sort key
      schema:
        type: string
        example: updatedAt
    searchParam:
      in: query
      name: search
      description: Search term
      schema:
        type: string
        example: title
    idPathParam:
      in: path
      name: id
      required: true
      description: Product ID
      schema:
        type: string
        example: '64d268cdeef8c84bb18912db'
